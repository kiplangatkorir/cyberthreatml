modules = ["python3", "python-3.11"]

[nix]
channel = "stable-24_05"

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "python_script"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "visualization_demo"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "integrated_analytics"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "enterprise_security"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "iot_security"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "zero_day_detection"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "test_python"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "CyberThreat-ML Demo"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "simplified_realtime"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "real_world_testing"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "simplified_real_world_testing"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "basic_real_world_testing"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "basic_zero_day_detection"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "complex_pattern_detection"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "text_visualization_demo"

[[workflows.workflow]]
name = "python_script"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python examples/realtime_detection.py"

[[workflows.workflow]]
name = "visualization_demo"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python examples/visualization_interpretability.py"

[[workflows.workflow]]
name = "integrated_analytics"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python examples/integrated_analytics.py"

[[workflows.workflow]]
name = "enterprise_security"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python examples/enterprise_security.py"

[[workflows.workflow]]
name = "iot_security"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python examples/iot_security.py"

[[workflows.workflow]]
name = "zero_day_detection"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd /home/runner/workspace && /mnt/nixmodules/nix/store/b03kwd9a5dm53k0z5vfzdhkvaa64c4g7-python3-3.10.13-env/bin/python3 examples/zero_day_detection.py"

[[workflows.workflow]]
name = "test_python"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python -V || python3 -V || /usr/bin/python3 -V || /usr/bin/env python3 -V || echo \"Python not found\""

[[workflows.workflow]]
name = "CyberThreat-ML Demo"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd /home/runner/workspace && /mnt/nixmodules/nix/store/b03kwd9a5dm53k0z5vfzdhkvaa64c4g7-python3-3.10.13-env/bin/python3 examples/minimal_example.py"

[[workflows.workflow]]
name = "simplified_realtime"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd /home/runner/workspace && /mnt/nixmodules/nix/store/b03kwd9a5dm53k0z5vfzdhkvaa64c4g7-python3-3.10.13-env/bin/python3 examples/simplified_realtime.py"

[[workflows.workflow]]
name = "real_world_testing"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd /home/runner/workspace && /mnt/nixmodules/nix/store/b03kwd9a5dm53k0z5vfzdhkvaa64c4g7-python3-3.10.13-env/bin/python3 examples/real_world_testing.py --download"

[[workflows.workflow]]
name = "simplified_real_world_testing"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd /home/runner/workspace && /mnt/nixmodules/nix/store/b03kwd9a5dm53k0z5vfzdhkvaa64c4g7-python3-3.10.13-env/bin/python3 examples/simplified_real_world_testing.py"

[[workflows.workflow]]
name = "basic_real_world_testing"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd /home/runner/workspace && /mnt/nixmodules/nix/store/b03kwd9a5dm53k0z5vfzdhkvaa64c4g7-python3-3.10.13-env/bin/python3 examples/basic_real_world_testing.py"

[[workflows.workflow]]
name = "basic_zero_day_detection"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd /home/runner/workspace && /mnt/nixmodules/nix/store/b03kwd9a5dm53k0z5vfzdhkvaa64c4g7-python3-3.10.13-env/bin/python3 examples/basic_zero_day_detection.py"

[[workflows.workflow]]
name = "complex_pattern_detection"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd /home/runner/workspace && /mnt/nixmodules/nix/store/b03kwd9a5dm53k0z5vfzdhkvaa64c4g7-python3-3.10.13-env/bin/python3 examples/complex_pattern_detection.py"

[[workflows.workflow]]
name = "text_visualization_demo"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd /home/runner/workspace && /mnt/nixmodules/nix/store/b03kwd9a5dm53k0z5vfzdhkvaa64c4g7-python3-3.10.13-env/bin/python3 examples/text_visualization_demo.py"

[deployment]
run = ["sh", "-c", "python3 examples/basic_usage.py"]
